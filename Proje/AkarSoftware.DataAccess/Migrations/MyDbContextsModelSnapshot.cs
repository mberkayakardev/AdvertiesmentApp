// <auto-generated />
using System;
using AkarSoftware.DataAccess.Concrete.EntityFramework.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkarSoftware.DataAccess.Migrations
{
    [DbContext(typeof(MyDbContexts))]
    partial class MyDbContextsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Sadece İş başvurularında bulunabilecek olan adaylar için roldür.",
                            IsActive = true,
                            RoleName = "Aday"
                        },
                        new
                        {
                            Id = 2,
                            Description = "İlgili rol sistem yöneticilerine ve insan kaynakları için ayrılmıştır.",
                            IsActive = true,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AlwaysLockAccount")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 11, 16, 37, 16, 170, DateTimeKind.Local).AddTicks(574));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("GendersId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LockOutEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OptionalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorAuthenticaton")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GendersId");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlwaysLockAccount = false,
                            CreateDate = new DateTime(2023, 11, 11, 16, 37, 16, 170, DateTimeKind.Local).AddTicks(7158),
                            Email = "m.berkay.akar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Berkay",
                            GendersId = 1,
                            IsActive = true,
                            LastName = "Akar",
                            OptionalName = "",
                            PasswordHash = "EE8F61B03B6B1D0FC1171EAE7D20BC689F2502D8679574007CB6939D1F8AFF94",
                            PhoneNumber = "+905345413410",
                            PhoneNumberConfirmed = true,
                            Status = true,
                            TwoFactorAuthenticaton = false,
                            UpdatedDate = new DateTime(2023, 11, 11, 16, 37, 16, 170, DateTimeKind.Local).AddTicks(7159),
                            UserName = "BERKAY"
                        },
                        new
                        {
                            Id = 2,
                            AlwaysLockAccount = false,
                            CreateDate = new DateTime(2023, 11, 11, 16, 37, 16, 170, DateTimeKind.Local).AddTicks(7374),
                            Email = "ahmet.akar@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ahmet",
                            GendersId = 1,
                            IsActive = true,
                            LastName = "Akar",
                            OptionalName = "",
                            PasswordHash = "EE8F61B03B6B1D0FC1171EAE7D20BC689F2502D8679574007CB6939D1F8AFF94",
                            PhoneNumber = "+90111111111",
                            PhoneNumberConfirmed = true,
                            Status = true,
                            TwoFactorAuthenticaton = false,
                            UpdatedDate = new DateTime(2023, 11, 11, 16, 37, 16, 170, DateTimeKind.Local).AddTicks(7375),
                            UserName = "AHMET"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.AppUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("BaseRoleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BaseRoleId");

                    b.HasIndex("AppUserId", "BaseRoleId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            BaseRoleId = 2,
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 2,
                            BaseRoleId = 1,
                            IsActive = true
                        });
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Erkek"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Kadın"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Belirtmek İstemiyor"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.Advertiesment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ApplicationStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 11, 16, 37, 16, 168, DateTimeKind.Local).AddTicks(9744));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Advertiesments");
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.AdvertiesmentUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvertiesmentId")
                        .HasColumnType("int");

                    b.Property<int>("AdvertiesmentUserApplyStatusId")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("CoverLetter")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("CvPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MilitaryStatusId")
                        .HasColumnType("int");

                    b.Property<int>("WorkExperiance")
                        .HasPrecision(0, 100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvertiesmentUserApplyStatusId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("MilitaryStatusId");

                    b.HasIndex("AdvertiesmentId", "AppUserId")
                        .IsUnique();

                    b.ToTable("AdvertiesmentStatuses");
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.AdvertiesmentUserApplyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StatuDescription")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("AdvertiesmentUserApplyStatuses");
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.MilitaryStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("MilitaryStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Status = "Yapıldı",
                            StatusDescription = "Askerliğini yapan kişiler için teşkil etmektedir."
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Status = "Tecilli",
                            StatusDescription = "Askerliğini şuan için yapmamış ve yapma zorunluluğu olan kişiler için elverişlidir"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Status = "Muaf",
                            StatusDescription = "Askerlik durumunun muaf olması durumu temsil edilmektedir."
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Status = "Yapılacak - Bedelli",
                            StatusDescription = "İlgili başvuruda başvuran adayın askerlik zorunluluğunun olduğu fakat bedelli kategorisinde ilgili sürecin gerçekleştirileceği planlanmıştır"
                        });
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.ProviderServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 11, 11, 16, 37, 16, 170, DateTimeKind.Local).AddTicks(6483));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ListOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("ProviderServices");
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.AppUser", b =>
                {
                    b.HasOne("AkarSoftware.Core.Entities.Concrete.Gender", "Genders")
                        .WithMany("AppUsers")
                        .HasForeignKey("GendersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genders");
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.AppUserRole", b =>
                {
                    b.HasOne("AkarSoftware.Core.Entities.Concrete.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkarSoftware.Core.Entities.Concrete.AppRole", "BaseRole")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("BaseRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("BaseRole");
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.AdvertiesmentUser", b =>
                {
                    b.HasOne("AkarSoftware.Entities.Concrete.Advertiesment", "Advertiesment")
                        .WithMany("AdvertiesmentUsers")
                        .HasForeignKey("AdvertiesmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkarSoftware.Entities.Concrete.AdvertiesmentUserApplyStatus", "advertiesmentUserApplyStatus")
                        .WithMany("AdvertiesmentUsers")
                        .HasForeignKey("AdvertiesmentUserApplyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkarSoftware.Core.Entities.Concrete.AppUser", "ApplyUser")
                        .WithMany()
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkarSoftware.Entities.Concrete.MilitaryStatus", "MilitaryStatus")
                        .WithMany("AdvertiesmentUsers")
                        .HasForeignKey("MilitaryStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advertiesment");

                    b.Navigation("ApplyUser");

                    b.Navigation("MilitaryStatus");

                    b.Navigation("advertiesmentUserApplyStatus");
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.AppRole", b =>
                {
                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("AkarSoftware.Core.Entities.Concrete.Gender", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.Advertiesment", b =>
                {
                    b.Navigation("AdvertiesmentUsers");
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.AdvertiesmentUserApplyStatus", b =>
                {
                    b.Navigation("AdvertiesmentUsers");
                });

            modelBuilder.Entity("AkarSoftware.Entities.Concrete.MilitaryStatus", b =>
                {
                    b.Navigation("AdvertiesmentUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
